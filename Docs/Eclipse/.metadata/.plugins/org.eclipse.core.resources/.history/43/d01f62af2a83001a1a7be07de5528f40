import java.io.FileInputStream;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutionException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.api.core.ApiFuture;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.firestore.DocumentReference;
import com.google.cloud.firestore.Firestore;
import com.google.cloud.firestore.WriteResult;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import com.google.firebase.cloud.FirestoreClient;
import com.google.gson.Gson;


@WebServlet("/evaluate")
public class Review extends HttpServlet {
	private Firestore db;
	
	@Override
	public void init() {
		try {
			FileInputStream serviceAccount = new FileInputStream("E:\\Ayoub\\AMEDDAH-AYOUB\\AYOUB\\Mundiapolis\\ACI\\2ACI\\Stage\\Review\\JAVA-WEB\\vereview\\vereviewKey.json");
			FirebaseOptions options = new FirebaseOptions.Builder()
					  .setCredentials(GoogleCredentials.fromStream(serviceAccount))
					  .setDatabaseUrl("https://vereview.firebaseio.com")
					  .build();
			FirebaseApp.initializeApp(options);
			db = FirestoreClient.getFirestore();
			System.out.println("ICI");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
//	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
//		doPost(request, response);
//	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException{
        String Data = request.getParameter("jsonData");
        System.out.println(Data);
		try {
			setReview(Data);
		} catch (InterruptedException | ExecutionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	public void setReview(String dataReviw) throws InterruptedException, ExecutionException {
		Date date = new Date();
		String rating = null;
		Gson g = new Gson();	
        Review r = g.fromJson(dataReviw, Review.class);
        if(r.getStar() == "1 star: Bad") {
        	rating = "1";
        }else if(r.getStar() == "2 star: Poor") {
        	rating = "2";
        }else if(r.getStar() == "3 star: Average") {
        	rating = "3";
        }else if(r.getStar() == "4 star: Great") {
        	rating = "4";
        }else if(r.getStar() == "5 star: Excellent") {
        	rating = "5";
        }
		DocumentReference docRef = db.collection("REVIEWS").document("ayoub@gmail.com-facebook.com");
		Map<String, Object> data = new HashMap<>();
		data.put("Reads",0);
		data.put("Useful",0);
		data.put("body",r.getBody());
		data.put("company","facebook.com");
		data.put("date",date.getTime());
		data.put("rating",rating);
		data.put("title",r.getTitle());
		data.put("update",date.getTime());
		data.put("user","ayoub.ameddah@gmail.com");
		ApiFuture<WriteResult> result = docRef.set(data);
		System.out.println("Update time : " + result.get().getUpdateTime());
	}
}


